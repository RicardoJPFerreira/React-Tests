{"ast":null,"code":"var _jsxFileName = \"/Users/ricardoferreira/myProjects/React-Tests/src/UseEffect/EffectTutorial.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EffectTutorial() {\n  _s();\n\n  const [data, setData] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"https://jsonplaceholder.typicode.com/comments\").then(response => {\n      setData(response.data[0].email);\n    });\n  }, []); // empty array to trigger only on render,\n  // without array triggers always that a state is modified,\n  // pass some specific states so it triggers only on that state change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Hello World \", data]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n}\n\n_s(EffectTutorial, \"SdShWBeHkV26fLNog65mn1O2hHw=\");\n\n_c = EffectTutorial;\nexport default EffectTutorial;\n\nvar _c;\n\n$RefreshReg$(_c, \"EffectTutorial\");","map":{"version":3,"sources":["/Users/ricardoferreira/myProjects/React-Tests/src/UseEffect/EffectTutorial.js"],"names":["React","useEffect","useState","axios","EffectTutorial","data","setData","get","then","response","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACbE,IAAAA,KAAK,CACAI,GADL,CACS,+CADT,EAEKC,IAFL,CAEWC,QAAD,IAAc;AAChBH,MAAAA,OAAO,CAACG,QAAQ,CAACJ,IAAT,CAAc,CAAd,EAAiBK,KAAlB,CAAP;AACH,KAJL;AAKH,GANQ,EAMN,EANM,CAAT,CAHsB,CASf;AACA;AACA;;AAEP,sBAAO;AAAA,+BAAkBL,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAdQD,c;;KAAAA,c;AAgBT,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction EffectTutorial() {\n    const [data, setData] = useState(\"\");\n\n    useEffect (() => {\n        axios\n            .get(\"https://jsonplaceholder.typicode.com/comments\")\n            .then((response) => {\n                setData(response.data[0].email)\n            })\n    }, []) // empty array to trigger only on render,\n           // without array triggers always that a state is modified,\n           // pass some specific states so it triggers only on that state change\n\n    return <div>Hello World {data}</div>\n}\n\nexport default EffectTutorial;"]},"metadata":{},"sourceType":"module"}